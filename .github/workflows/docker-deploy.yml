on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy with Docker Compose
    runs-on: ubuntu-latest

    steps:
      # Step 1: Install SSH keys and configure SSH
      - name: Install SSH Keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      # Step 2: Clone or Pull the Repository on the Server
      - name: Clone or Pull Repository
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            # Check if the repository is already cloned
            if [ ! -d ~/cicdpipeline_new/.git ]; then
              git clone https://github.com/jo73na/cicdpipeline.git ~/cicdpipeline_new
            else
              cd ~/cicdpipeline_new && git fetch --all && git pull
            fi
          "

      # Step 3: Copy SSL Certificates
      - name: Copy SSL Certificates
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            mkdir -p ~/cicdpipeline_new/certs &&
            sudo cp /etc/letsencrypt/live/hrumbles.com/fullchain.pem ~/cicdpipeline_new/certs/fullchain.pem &&
            sudo cp /etc/letsencrypt/live/hrumbles.com/privkey.pem ~/cicdpipeline_new/certs/privkey.pem
          "

      # Step 4: Create required folders if they don't exist
      - name: Create Folders on Server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            # Create directories if they do not exist
            mkdir -p /root/cicdpipeline_new/nginx_proxy/data &&
            mkdir -p /root/cicdpipeline_new/letsencrypt
          "

      # Step 5: Clean Up Volumes and Containers
      - name: Clean Up Docker Resources
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            # Remove any unused volumes
            sudo docker volume prune -f &&
            # Stop and remove containers for the application
            cd ~/cicdpipeline_new &&
            sudo docker-compose down --volumes --remove-orphans
          "

      # Step 6: Build and Deploy the Application
      - name: Run Docker Compose
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd ~/cicdpipeline_new &&
            # Ensure Docker Compose is installed
            if ! command -v docker-compose &> /dev/null; then
              echo 'Installing Docker Compose...'
              sudo curl -L 'https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)' -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi &&
            # Build and start containers
            sudo docker-compose build --no-cache &&
            sudo docker-compose up -d
          "

      # Step 7: Cleanup SSH Keys
      - name: Cleanup SSH Keys
        run: |
          rm -rf ~/.ssh
